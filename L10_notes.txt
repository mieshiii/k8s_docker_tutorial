Kubernetes - K8s
- a container orchestration platform
- manages the deployment, scaling, and monitoring of containerized applications
- provides a way to define and manage the desired state of a cluster

WHAT K8s CAN'T DO
- does not deploy source code
- does not build your applications
- does not provide application-level services (e.g., databases, message queues)

K8s CAN DO
- automate the deployment and scaling of containerized applications
- provide a way to define and manage the desired state of a cluster
- provide a way to distribute and manage state across multiple nodes in a cluster
- provide a way to orchestrate containerized applications across multiple nodes in a cluster

K8s COMPONENTS
- API Server: manages cluster resources and provides a RESTful API for managing the cluster
- Control Plane: manages the state of the cluster, including scheduling, managing pods, and managing containers
- Worker Nodes: the physical or virtual machines that run the containerized applications
- etcd: a distributed key-value store that stores the state of the cluster
- Kubernetes Master: the central control plane that configures and manages the cluster

Cluster -> Nodes -> Pods -> Containers -> Services/Applications

RUN LOCAL K8s
 - docker desktop - single node
 - minikube - multiple nodes
 - microk8s - multiple nodes
 - kind - multiple nodes

**when running Linux machine, kubectl IS NOT INSTALLED along with docker-desktop

Check if Kubernetes is installed
- kubectl cluster-info
- kubectl get nodes

**you can use kubectx to quickly switch between contexts
**install using sudo apt install kubectx

Check what context you are in
- kubectl config current-context
- kubectl config get-contexts

Imperative vs Declarative
 - Imperative: commands in CLI/like code
 - Declarative: YAML files

Create an object using YAML
 - kubectl create -f [YAML file]
 **docs for new manifests at kubernetes.io/docs
 - kubectl [flags for objects to created] --dry-run=client -o yaml > [file]
